syntax = "proto3";

package io.afloatdb.kv.proto;

option java_multiple_files = true;

message TypedValue {
    int32 type = 1;
    bytes value = 2;
}

message PutRequest {
    string key = 1;
    TypedValue value = 2;
    bool absent = 3;
}

message PutResponse {
    TypedValue value = 1;
}

message SetRequest {
    string key = 1;
    TypedValue value = 2;
}

message SetResponse {
}

message GetRequest {
    string key = 1;
    int64 minCommitIndex = 2;
}

message GetResponse {
    TypedValue value = 1;
}

message ContainsRequest {
    string key = 1;
    TypedValue value = 2;
    int64 minCommitIndex = 3;
}

message ContainsResponse {
    bool success = 1;
}

message DeleteRequest {
    string key = 1;
}

message DeleteResponse {
    bool success = 1;
}

message RemoveRequest {
    string key = 1;
    TypedValue value = 2;
}

message RemoveResponse {
    bool success = 1;
    TypedValue value = 2;
}

message ReplaceRequest {
    string key = 1;
    TypedValue oldValue = 2;
    TypedValue newValue = 3;
}

message ReplaceResponse {
    bool success = 1;
}

message SizeRequest {
    int64 minCommitIndex = 1;
}

message SizeResponse {
    int32 size = 1;
}

message ClearRequest {
}

message ClearResponse {
    int32 size = 1;
}

message KVResponse {
    int64 commitIndex = 1;
    oneof response {
        PutResponse putResponse = 2;
        SetResponse setResponse = 3;
        GetResponse getResponse = 4;
        ContainsResponse containsResponse = 5;
        DeleteResponse deleteResponse = 6;
        RemoveResponse removeResponse = 7;
        ReplaceResponse replaceResponse = 8;
        SizeResponse sizeResponse = 9;
        ClearResponse clearResponse = 10;
    };
}

service KVRequestHandler {
    rpc put (PutRequest) returns (KVResponse);
    rpc set (SetRequest) returns (KVResponse);
    rpc get (GetRequest) returns (KVResponse);
    rpc contains (ContainsRequest) returns (KVResponse);
    rpc delete (DeleteRequest) returns (KVResponse);
    rpc remove (RemoveRequest) returns (KVResponse);
    rpc replace (ReplaceRequest) returns (KVResponse);
    rpc size (SizeRequest) returns (KVResponse);
    rpc clear (ClearRequest) returns (KVResponse);
}
